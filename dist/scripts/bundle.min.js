(()=>{var e={725:()=>{document.querySelectorAll(".do-details-form").forEach((e=>{const t=e.parentNode.querySelector(".do-details-list");e.addEventListener("submit",(s=>{s.preventDefault();const n=e.elements.feature,i=function(e){return 0!==e.value.length||(alert("Поле характерситики не должно быть пустым"),!1)}(n);i&&(function(e,t){const s=document.createElement("li");s.appendChild(document.createTextNode(t)),e.appendChild(s)}(t,n.value),n.value="")}))}))},365:()=>{const e="./images/icons.min.svg";fetch(e).then((e=>e.text())).then((e=>{let t=document.createElement("div");t.classList.add("visuallyHidden"),t.innerHTML=e,document.body.appendChild(t)})).catch((t=>{console.log("svg file not found:",e)}))}},t={};function s(n){var i=t[n];if(void 0!==i)return i.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}(()=>{"use strict";s(365),s(725);document.querySelectorAll(".tabs").forEach((e=>{new class{constructor(e){this.$element=e,this.$navItems=e.querySelectorAll(".tabs__nav-item"),this.$accordionHandlers=e.querySelectorAll(".tabs__item-header"),this.$tabs=e.querySelectorAll(".tabs__item"),this.currentIndex=0,this.init()}init(){this.$navItems.forEach((e=>{e.addEventListener("click",(t=>{this.currentIndex=this.getIndex(e,this.$navItems),this.openTab(),this.closeTheRest()}))})),this.$accordionHandlers.forEach((e=>{e.addEventListener("click",(t=>{this.currentIndex=this.getIndex(e,this.$accordionHandlers),this.$tabs[this.currentIndex].classList.contains("is-open")?this.closeTab():this.openTab()}))})),window.onresize=this.controlOpenTabs.bind(this)}openTab(){this.$navItems[this.currentIndex].classList.add("is-open"),this.$tabs[this.currentIndex].classList.add("is-open")}closeTab(){this.$navItems[this.currentIndex].classList.remove("is-open"),this.$tabs[this.currentIndex].classList.remove("is-open")}closeTheRest(){this.$navItems.forEach((e=>{if(e!==this.$navItems[this.currentIndex]){let t=this.getIndex(e,this.$navItems);e.classList.remove("is-open"),this.$tabs[t].classList.remove("is-open")}}))}getIndex(e,t){return[].indexOf.call(t,e)}controlOpenTabs(){if(window.innerWidth>767){const e=this.countOpenTabs();(0===e||e>1)&&(this.currentIndex=0,this.closeTheRest(),this.openTab())}}countOpenTabs(){return[...this.$tabs].filter((e=>e.classList.contains("is-open"))).length}}(e)}))})()})();